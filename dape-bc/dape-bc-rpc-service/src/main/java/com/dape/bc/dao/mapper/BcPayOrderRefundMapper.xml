<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dape.bc.dao.mapper.BcPayOrderRefundMapper">
  <resultMap id="BaseResultMap" type="com.dape.bc.dao.model.BcPayOrderRefund">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="is_enabled" jdbcType="BIT" property="isEnabled" />
    <result column="out_trade_no" jdbcType="VARCHAR" property="outTradeNo" />
    <result column="trade_no" jdbcType="VARCHAR" property="tradeNo" />
    <result column="refund_amount" jdbcType="VARCHAR" property="refundAmount" />
    <result column="refund_reason" jdbcType="VARCHAR" property="refundReason" />
    <result column="request_no" jdbcType="VARCHAR" property="requestNo" />
    <result column="refund_result" jdbcType="INTEGER" property="refundResult" />
    <result column="out_request_no" jdbcType="VARCHAR" property="outRequestNo" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, create_date, is_enabled, out_trade_no, trade_no, refund_amount, refund_reason, 
    request_no, refund_result, out_request_no
  </sql>
  <select id="selectByExample" parameterType="com.dape.bc.dao.model.BcPayOrderRefundExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bc_pay_order_refund
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from bc_pay_order_refund
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from bc_pay_order_refund
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.dape.bc.dao.model.BcPayOrderRefundExample">
    delete from bc_pay_order_refund
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.dape.bc.dao.model.BcPayOrderRefund">
    insert into bc_pay_order_refund (id, create_date, is_enabled, 
      out_trade_no, trade_no, refund_amount, 
      refund_reason, request_no, refund_result, 
      out_request_no)
    values (#{id,jdbcType=BIGINT}, #{createDate,jdbcType=TIMESTAMP}, #{isEnabled,jdbcType=BIT}, 
      #{outTradeNo,jdbcType=VARCHAR}, #{tradeNo,jdbcType=VARCHAR}, #{refundAmount,jdbcType=VARCHAR}, 
      #{refundReason,jdbcType=VARCHAR}, #{requestNo,jdbcType=VARCHAR}, #{refundResult,jdbcType=INTEGER}, 
      #{outRequestNo,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.dape.bc.dao.model.BcPayOrderRefund">
    insert into bc_pay_order_refund
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="isEnabled != null">
        is_enabled,
      </if>
      <if test="outTradeNo != null">
        out_trade_no,
      </if>
      <if test="tradeNo != null">
        trade_no,
      </if>
      <if test="refundAmount != null">
        refund_amount,
      </if>
      <if test="refundReason != null">
        refund_reason,
      </if>
      <if test="requestNo != null">
        request_no,
      </if>
      <if test="refundResult != null">
        refund_result,
      </if>
      <if test="outRequestNo != null">
        out_request_no,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="isEnabled != null">
        #{isEnabled,jdbcType=BIT},
      </if>
      <if test="outTradeNo != null">
        #{outTradeNo,jdbcType=VARCHAR},
      </if>
      <if test="tradeNo != null">
        #{tradeNo,jdbcType=VARCHAR},
      </if>
      <if test="refundAmount != null">
        #{refundAmount,jdbcType=VARCHAR},
      </if>
      <if test="refundReason != null">
        #{refundReason,jdbcType=VARCHAR},
      </if>
      <if test="requestNo != null">
        #{requestNo,jdbcType=VARCHAR},
      </if>
      <if test="refundResult != null">
        #{refundResult,jdbcType=INTEGER},
      </if>
      <if test="outRequestNo != null">
        #{outRequestNo,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.dape.bc.dao.model.BcPayOrderRefundExample" resultType="java.lang.Long">
    select count(*) from bc_pay_order_refund
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update bc_pay_order_refund
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.createDate != null">
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isEnabled != null">
        is_enabled = #{record.isEnabled,jdbcType=BIT},
      </if>
      <if test="record.outTradeNo != null">
        out_trade_no = #{record.outTradeNo,jdbcType=VARCHAR},
      </if>
      <if test="record.tradeNo != null">
        trade_no = #{record.tradeNo,jdbcType=VARCHAR},
      </if>
      <if test="record.refundAmount != null">
        refund_amount = #{record.refundAmount,jdbcType=VARCHAR},
      </if>
      <if test="record.refundReason != null">
        refund_reason = #{record.refundReason,jdbcType=VARCHAR},
      </if>
      <if test="record.requestNo != null">
        request_no = #{record.requestNo,jdbcType=VARCHAR},
      </if>
      <if test="record.refundResult != null">
        refund_result = #{record.refundResult,jdbcType=INTEGER},
      </if>
      <if test="record.outRequestNo != null">
        out_request_no = #{record.outRequestNo,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update bc_pay_order_refund
    set id = #{record.id,jdbcType=BIGINT},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      is_enabled = #{record.isEnabled,jdbcType=BIT},
      out_trade_no = #{record.outTradeNo,jdbcType=VARCHAR},
      trade_no = #{record.tradeNo,jdbcType=VARCHAR},
      refund_amount = #{record.refundAmount,jdbcType=VARCHAR},
      refund_reason = #{record.refundReason,jdbcType=VARCHAR},
      request_no = #{record.requestNo,jdbcType=VARCHAR},
      refund_result = #{record.refundResult,jdbcType=INTEGER},
      out_request_no = #{record.outRequestNo,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.dape.bc.dao.model.BcPayOrderRefund">
    update bc_pay_order_refund
    <set>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="isEnabled != null">
        is_enabled = #{isEnabled,jdbcType=BIT},
      </if>
      <if test="outTradeNo != null">
        out_trade_no = #{outTradeNo,jdbcType=VARCHAR},
      </if>
      <if test="tradeNo != null">
        trade_no = #{tradeNo,jdbcType=VARCHAR},
      </if>
      <if test="refundAmount != null">
        refund_amount = #{refundAmount,jdbcType=VARCHAR},
      </if>
      <if test="refundReason != null">
        refund_reason = #{refundReason,jdbcType=VARCHAR},
      </if>
      <if test="requestNo != null">
        request_no = #{requestNo,jdbcType=VARCHAR},
      </if>
      <if test="refundResult != null">
        refund_result = #{refundResult,jdbcType=INTEGER},
      </if>
      <if test="outRequestNo != null">
        out_request_no = #{outRequestNo,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dape.bc.dao.model.BcPayOrderRefund">
    update bc_pay_order_refund
    set create_date = #{createDate,jdbcType=TIMESTAMP},
      is_enabled = #{isEnabled,jdbcType=BIT},
      out_trade_no = #{outTradeNo,jdbcType=VARCHAR},
      trade_no = #{tradeNo,jdbcType=VARCHAR},
      refund_amount = #{refundAmount,jdbcType=VARCHAR},
      refund_reason = #{refundReason,jdbcType=VARCHAR},
      request_no = #{requestNo,jdbcType=VARCHAR},
      refund_result = #{refundResult,jdbcType=INTEGER},
      out_request_no = #{outRequestNo,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <cache type="org.mybatis.caches.ehcache.LoggingEhcache" />
</mapper>