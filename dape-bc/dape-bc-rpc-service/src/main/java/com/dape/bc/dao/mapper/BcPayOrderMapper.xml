<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dape.bc.dao.mapper.BcPayOrderMapper">
  <resultMap id="BaseResultMap" type="com.dape.bc.dao.model.BcPayOrder">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="is_enabled" jdbcType="BIT" property="isEnabled" />
    <result column="out_trade_no" jdbcType="VARCHAR" property="outTradeNo" />
    <result column="total_amount" jdbcType="VARCHAR" property="totalAmount" />
    <result column="subject" jdbcType="VARCHAR" property="subject" />
    <result column="body" jdbcType="VARCHAR" property="body" />
    <result column="trade_no" jdbcType="VARCHAR" property="tradeNo" />
    <result column="pay_result" jdbcType="INTEGER" property="payResult" />
    <result column="refund_result" jdbcType="INTEGER" property="refundResult" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, create_date, is_enabled, out_trade_no, total_amount, subject, body, trade_no, 
    pay_result, refund_result
  </sql>
  <select id="selectByExample" parameterType="com.dape.bc.dao.model.BcPayOrderExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bc_pay_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from bc_pay_order
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from bc_pay_order
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.dape.bc.dao.model.BcPayOrderExample">
    delete from bc_pay_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.dape.bc.dao.model.BcPayOrder">
    insert into bc_pay_order (id, create_date, is_enabled, 
      out_trade_no, total_amount, subject, 
      body, trade_no, pay_result, 
      refund_result)
    values (#{id,jdbcType=BIGINT}, #{createDate,jdbcType=TIMESTAMP}, #{isEnabled,jdbcType=BIT}, 
      #{outTradeNo,jdbcType=VARCHAR}, #{totalAmount,jdbcType=VARCHAR}, #{subject,jdbcType=VARCHAR}, 
      #{body,jdbcType=VARCHAR}, #{tradeNo,jdbcType=VARCHAR}, #{payResult,jdbcType=INTEGER}, 
      #{refundResult,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.dape.bc.dao.model.BcPayOrder">
    insert into bc_pay_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="isEnabled != null">
        is_enabled,
      </if>
      <if test="outTradeNo != null">
        out_trade_no,
      </if>
      <if test="totalAmount != null">
        total_amount,
      </if>
      <if test="subject != null">
        subject,
      </if>
      <if test="body != null">
        body,
      </if>
      <if test="tradeNo != null">
        trade_no,
      </if>
      <if test="payResult != null">
        pay_result,
      </if>
      <if test="refundResult != null">
        refund_result,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="isEnabled != null">
        #{isEnabled,jdbcType=BIT},
      </if>
      <if test="outTradeNo != null">
        #{outTradeNo,jdbcType=VARCHAR},
      </if>
      <if test="totalAmount != null">
        #{totalAmount,jdbcType=VARCHAR},
      </if>
      <if test="subject != null">
        #{subject,jdbcType=VARCHAR},
      </if>
      <if test="body != null">
        #{body,jdbcType=VARCHAR},
      </if>
      <if test="tradeNo != null">
        #{tradeNo,jdbcType=VARCHAR},
      </if>
      <if test="payResult != null">
        #{payResult,jdbcType=INTEGER},
      </if>
      <if test="refundResult != null">
        #{refundResult,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.dape.bc.dao.model.BcPayOrderExample" resultType="java.lang.Long">
    select count(*) from bc_pay_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update bc_pay_order
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.createDate != null">
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isEnabled != null">
        is_enabled = #{record.isEnabled,jdbcType=BIT},
      </if>
      <if test="record.outTradeNo != null">
        out_trade_no = #{record.outTradeNo,jdbcType=VARCHAR},
      </if>
      <if test="record.totalAmount != null">
        total_amount = #{record.totalAmount,jdbcType=VARCHAR},
      </if>
      <if test="record.subject != null">
        subject = #{record.subject,jdbcType=VARCHAR},
      </if>
      <if test="record.body != null">
        body = #{record.body,jdbcType=VARCHAR},
      </if>
      <if test="record.tradeNo != null">
        trade_no = #{record.tradeNo,jdbcType=VARCHAR},
      </if>
      <if test="record.payResult != null">
        pay_result = #{record.payResult,jdbcType=INTEGER},
      </if>
      <if test="record.refundResult != null">
        refund_result = #{record.refundResult,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update bc_pay_order
    set id = #{record.id,jdbcType=BIGINT},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      is_enabled = #{record.isEnabled,jdbcType=BIT},
      out_trade_no = #{record.outTradeNo,jdbcType=VARCHAR},
      total_amount = #{record.totalAmount,jdbcType=VARCHAR},
      subject = #{record.subject,jdbcType=VARCHAR},
      body = #{record.body,jdbcType=VARCHAR},
      trade_no = #{record.tradeNo,jdbcType=VARCHAR},
      pay_result = #{record.payResult,jdbcType=INTEGER},
      refund_result = #{record.refundResult,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.dape.bc.dao.model.BcPayOrder">
    update bc_pay_order
    <set>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="isEnabled != null">
        is_enabled = #{isEnabled,jdbcType=BIT},
      </if>
      <if test="outTradeNo != null">
        out_trade_no = #{outTradeNo,jdbcType=VARCHAR},
      </if>
      <if test="totalAmount != null">
        total_amount = #{totalAmount,jdbcType=VARCHAR},
      </if>
      <if test="subject != null">
        subject = #{subject,jdbcType=VARCHAR},
      </if>
      <if test="body != null">
        body = #{body,jdbcType=VARCHAR},
      </if>
      <if test="tradeNo != null">
        trade_no = #{tradeNo,jdbcType=VARCHAR},
      </if>
      <if test="payResult != null">
        pay_result = #{payResult,jdbcType=INTEGER},
      </if>
      <if test="refundResult != null">
        refund_result = #{refundResult,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dape.bc.dao.model.BcPayOrder">
    update bc_pay_order
    set create_date = #{createDate,jdbcType=TIMESTAMP},
      is_enabled = #{isEnabled,jdbcType=BIT},
      out_trade_no = #{outTradeNo,jdbcType=VARCHAR},
      total_amount = #{totalAmount,jdbcType=VARCHAR},
      subject = #{subject,jdbcType=VARCHAR},
      body = #{body,jdbcType=VARCHAR},
      trade_no = #{tradeNo,jdbcType=VARCHAR},
      pay_result = #{payResult,jdbcType=INTEGER},
      refund_result = #{refundResult,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <cache type="org.mybatis.caches.ehcache.LoggingEhcache" />
</mapper>